diff --git a/demo/image_editing_with_groundingdino_gligen.ipynb b/demo/image_editing_with_groundingdino_gligen.ipynb
index 3c71b57..637fac5 100644
--- a/demo/image_editing_with_groundingdino_gligen.ipynb
+++ b/demo/image_editing_with_groundingdino_gligen.ipynb
@@ -46,42 +46,71 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 50,
+   "execution_count": 1,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "huggingface/tokenizers: The current process just got forked, after parallelism has already been used. Disabling parallelism to avoid deadlocks...\n",
-      "To disable this warning, you can either:\n",
-      "\t- Avoid using `tokenizers` before the fork if possible\n",
-      "\t- Explicitly set the environment variable TOKENIZERS_PARALLELISM=(true | false)\n",
-      "Requirement already satisfied: diffusers in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (0.14.0)\n",
-      "Requirement already satisfied: transformers in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (4.27.4)\n",
-      "Requirement already satisfied: accelerate in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (0.18.0)\n",
-      "Requirement already satisfied: scipy in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (1.7.3)\n",
-      "Requirement already satisfied: safetensors in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (0.3.0)\n",
-      "Requirement already satisfied: requests in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers) (2.28.1)\n",
-      "Requirement already satisfied: Pillow in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers) (9.2.0)\n",
-      "Requirement already satisfied: regex!=2019.12.17 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers) (2022.7.25)\n",
-      "Requirement already satisfied: numpy in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers) (1.21.6)\n",
-      "Requirement already satisfied: filelock in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers) (3.9.0)\n",
-      "Requirement already satisfied: huggingface-hub>=0.10.0 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers) (0.13.3)\n",
-      "Requirement already satisfied: importlib-metadata in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers) (4.12.0)\n",
-      "Requirement already satisfied: tqdm>=4.27 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from transformers) (4.64.0)\n",
-      "Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from transformers) (0.13.3)\n",
-      "Requirement already satisfied: packaging>=20.0 in /home/liushilong/.local/lib/python3.7/site-packages (from transformers) (21.0)\n",
-      "Requirement already satisfied: pyyaml>=5.1 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from transformers) (6.0)\n",
-      "Requirement already satisfied: torch>=1.4.0 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from accelerate) (1.12.1+cu113)\n",
-      "Requirement already satisfied: psutil in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from accelerate) (5.9.4)\n",
-      "Requirement already satisfied: typing-extensions>=3.7.4.3 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from huggingface-hub>=0.10.0->diffusers) (4.3.0)\n",
-      "Requirement already satisfied: pyparsing>=2.0.2 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from packaging>=20.0->transformers) (3.0.9)\n",
-      "Requirement already satisfied: zipp>=0.5 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from importlib-metadata->diffusers) (3.8.1)\n",
-      "Requirement already satisfied: idna<4,>=2.5 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers) (3.3)\n",
-      "Requirement already satisfied: certifi>=2017.4.17 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers) (2022.6.15)\n",
-      "Requirement already satisfied: charset-normalizer<3,>=2 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers) (2.1.0)\n",
-      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers) (1.26.11)\n"
+      "Collecting diffusers\n",
+      "  Using cached diffusers-0.34.0-py3-none-any.whl.metadata (20 kB)\n",
+      "Requirement already satisfied: transformers in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (4.55.2)\n",
+      "Collecting accelerate\n",
+      "  Using cached accelerate-1.10.0-py3-none-any.whl.metadata (19 kB)\n",
+      "Requirement already satisfied: scipy in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (1.15.3)\n",
+      "Requirement already satisfied: safetensors in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (0.6.2)\n",
+      "Collecting importlib_metadata (from diffusers)\n",
+      "  Using cached importlib_metadata-8.7.0-py3-none-any.whl.metadata (4.8 kB)\n",
+      "Requirement already satisfied: filelock in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers) (3.19.1)\n",
+      "Requirement already satisfied: huggingface-hub>=0.27.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers) (0.34.4)\n",
+      "Requirement already satisfied: numpy in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers) (2.2.6)\n",
+      "Requirement already satisfied: regex!=2019.12.17 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers) (2025.7.34)\n",
+      "Requirement already satisfied: requests in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers) (2.32.4)\n",
+      "Requirement already satisfied: Pillow in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers) (11.3.0)\n",
+      "Requirement already satisfied: packaging>=20.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from transformers) (25.0)\n",
+      "Requirement already satisfied: pyyaml>=5.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from transformers) (6.0.2)\n",
+      "Requirement already satisfied: tokenizers<0.22,>=0.21 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from transformers) (0.21.4)\n",
+      "Requirement already satisfied: tqdm>=4.27 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from transformers) (4.67.1)\n",
+      "Requirement already satisfied: fsspec>=2023.5.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.27.0->diffusers) (2025.7.0)\n",
+      "Requirement already satisfied: typing-extensions>=3.7.4.3 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.27.0->diffusers) (4.14.1)\n",
+      "Requirement already satisfied: hf-xet<2.0.0,>=1.1.3 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.27.0->diffusers) (1.1.7)\n",
+      "Requirement already satisfied: psutil in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from accelerate) (7.0.0)\n",
+      "Requirement already satisfied: torch>=2.0.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from accelerate) (2.8.0)\n",
+      "Requirement already satisfied: sympy>=1.13.3 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (1.14.0)\n",
+      "Requirement already satisfied: networkx in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (3.4.2)\n",
+      "Requirement already satisfied: jinja2 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (3.1.6)\n",
+      "Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.8.93 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (12.8.93)\n",
+      "Requirement already satisfied: nvidia-cuda-runtime-cu12==12.8.90 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (12.8.90)\n",
+      "Requirement already satisfied: nvidia-cuda-cupti-cu12==12.8.90 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (12.8.90)\n",
+      "Requirement already satisfied: nvidia-cudnn-cu12==9.10.2.21 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (9.10.2.21)\n",
+      "Requirement already satisfied: nvidia-cublas-cu12==12.8.4.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (12.8.4.1)\n",
+      "Requirement already satisfied: nvidia-cufft-cu12==11.3.3.83 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (11.3.3.83)\n",
+      "Requirement already satisfied: nvidia-curand-cu12==10.3.9.90 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (10.3.9.90)\n",
+      "Requirement already satisfied: nvidia-cusolver-cu12==11.7.3.90 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (11.7.3.90)\n",
+      "Requirement already satisfied: nvidia-cusparse-cu12==12.5.8.93 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (12.5.8.93)\n",
+      "Requirement already satisfied: nvidia-cusparselt-cu12==0.7.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (0.7.1)\n",
+      "Requirement already satisfied: nvidia-nccl-cu12==2.27.3 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (2.27.3)\n",
+      "Requirement already satisfied: nvidia-nvtx-cu12==12.8.90 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (12.8.90)\n",
+      "Requirement already satisfied: nvidia-nvjitlink-cu12==12.8.93 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (12.8.93)\n",
+      "Requirement already satisfied: nvidia-cufile-cu12==1.13.1.3 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (1.13.1.3)\n",
+      "Requirement already satisfied: triton==3.4.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from torch>=2.0.0->accelerate) (3.4.0)\n",
+      "Requirement already satisfied: setuptools>=40.8.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from triton==3.4.0->torch>=2.0.0->accelerate) (68.0.0)\n",
+      "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from sympy>=1.13.3->torch>=2.0.0->accelerate) (1.3.0)\n",
+      "Collecting zipp>=3.20 (from importlib_metadata->diffusers)\n",
+      "  Using cached zipp-3.23.0-py3-none-any.whl.metadata (3.6 kB)\n",
+      "Requirement already satisfied: MarkupSafe>=2.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from jinja2->torch>=2.0.0->accelerate) (3.0.2)\n",
+      "Requirement already satisfied: charset_normalizer<4,>=2 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers) (3.4.3)\n",
+      "Requirement already satisfied: idna<4,>=2.5 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers) (3.10)\n",
+      "Requirement already satisfied: urllib3<3,>=1.21.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers) (2.5.0)\n",
+      "Requirement already satisfied: certifi>=2017.4.17 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers) (2025.8.3)\n",
+      "Using cached diffusers-0.34.0-py3-none-any.whl (3.8 MB)\n",
+      "Using cached accelerate-1.10.0-py3-none-any.whl (374 kB)\n",
+      "Using cached importlib_metadata-8.7.0-py3-none-any.whl (27 kB)\n",
+      "Using cached zipp-3.23.0-py3-none-any.whl (10 kB)\n",
+      "Installing collected packages: zipp, importlib_metadata, diffusers, accelerate\n",
+      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m4/4\u001b[0m [accelerate]4\u001b[0m [accelerate]\n",
+      "\u001b[1A\u001b[2KSuccessfully installed accelerate-1.10.0 diffusers-0.34.0 importlib_metadata-8.7.0 zipp-3.23.0\n"
      ]
     }
    ],
@@ -91,73 +120,75 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 17,
+   "execution_count": 12,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "/home/liushilong/code/groundingDINO_github/demo\n",
+      "/home/scratch/samyak/breast_cancer_detection/GroundingDINO/demo\n",
       "fatal: destination path 'diffusers' already exists and is not an empty directory.\n",
-      "Obtaining file:///home/liushilong/code/groundingDINO_github/demo/diffusers\n",
+      "Obtaining file:///home/scratch/samyak/breast_cancer_detection/GroundingDINO/demo/diffusers\n",
       "  Installing build dependencies ... \u001b[?25ldone\n",
       "\u001b[?25h  Checking if build backend supports build_editable ... \u001b[?25ldone\n",
       "\u001b[?25h  Getting requirements to build editable ... \u001b[?25ldone\n",
       "\u001b[?25h  Preparing editable metadata (pyproject.toml) ... \u001b[?25ldone\n",
-      "\u001b[?25hRequirement already satisfied: Pillow in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers==0.15.0.dev0) (9.2.0)\n",
-      "Requirement already satisfied: filelock in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers==0.15.0.dev0) (3.9.0)\n",
-      "Requirement already satisfied: huggingface-hub>=0.13.2 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers==0.15.0.dev0) (0.13.3)\n",
-      "Requirement already satisfied: numpy in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers==0.15.0.dev0) (1.21.6)\n",
-      "Requirement already satisfied: regex!=2019.12.17 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers==0.15.0.dev0) (2022.7.25)\n",
-      "Requirement already satisfied: requests in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers==0.15.0.dev0) (2.28.1)\n",
-      "Requirement already satisfied: importlib-metadata in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from diffusers==0.15.0.dev0) (4.12.0)\n",
-      "Requirement already satisfied: pyyaml>=5.1 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from huggingface-hub>=0.13.2->diffusers==0.15.0.dev0) (6.0)\n",
-      "Requirement already satisfied: packaging>=20.9 in /home/liushilong/.local/lib/python3.7/site-packages (from huggingface-hub>=0.13.2->diffusers==0.15.0.dev0) (21.0)\n",
-      "Requirement already satisfied: typing-extensions>=3.7.4.3 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from huggingface-hub>=0.13.2->diffusers==0.15.0.dev0) (4.3.0)\n",
-      "Requirement already satisfied: tqdm>=4.42.1 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from huggingface-hub>=0.13.2->diffusers==0.15.0.dev0) (4.64.0)\n",
-      "Requirement already satisfied: zipp>=0.5 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from importlib-metadata->diffusers==0.15.0.dev0) (3.8.1)\n",
-      "Requirement already satisfied: certifi>=2017.4.17 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers==0.15.0.dev0) (2022.6.15)\n",
-      "Requirement already satisfied: idna<4,>=2.5 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers==0.15.0.dev0) (3.3)\n",
-      "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers==0.15.0.dev0) (1.26.11)\n",
-      "Requirement already satisfied: charset-normalizer<3,>=2 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from requests->diffusers==0.15.0.dev0) (2.1.0)\n",
-      "Requirement already satisfied: pyparsing>=2.0.2 in /home/liushilong/anaconda3/envs/ideadet2/lib/python3.7/site-packages (from packaging>=20.9->huggingface-hub>=0.13.2->diffusers==0.15.0.dev0) (3.0.9)\n",
+      "\u001b[?25hRequirement already satisfied: importlib_metadata in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (8.7.0)\n",
+      "Requirement already satisfied: filelock in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (3.19.1)\n",
+      "Requirement already satisfied: huggingface-hub>=0.34.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (0.34.4)\n",
+      "Requirement already satisfied: numpy in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (2.2.6)\n",
+      "Requirement already satisfied: regex!=2019.12.17 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (2025.7.34)\n",
+      "Requirement already satisfied: requests in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (2.32.4)\n",
+      "Requirement already satisfied: safetensors>=0.3.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (0.6.2)\n",
+      "Requirement already satisfied: Pillow in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from diffusers==0.35.0.dev0) (11.3.0)\n",
+      "Requirement already satisfied: fsspec>=2023.5.0 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.34.0->diffusers==0.35.0.dev0) (2025.7.0)\n",
+      "Requirement already satisfied: packaging>=20.9 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.34.0->diffusers==0.35.0.dev0) (25.0)\n",
+      "Requirement already satisfied: pyyaml>=5.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.34.0->diffusers==0.35.0.dev0) (6.0.2)\n",
+      "Requirement already satisfied: tqdm>=4.42.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.34.0->diffusers==0.35.0.dev0) (4.67.1)\n",
+      "Requirement already satisfied: typing-extensions>=3.7.4.3 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.34.0->diffusers==0.35.0.dev0) (4.14.1)\n",
+      "Requirement already satisfied: hf-xet<2.0.0,>=1.1.3 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from huggingface-hub>=0.34.0->diffusers==0.35.0.dev0) (1.1.7)\n",
+      "Requirement already satisfied: zipp>=3.20 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from importlib_metadata->diffusers==0.35.0.dev0) (3.23.0)\n",
+      "Requirement already satisfied: charset_normalizer<4,>=2 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers==0.35.0.dev0) (3.4.3)\n",
+      "Requirement already satisfied: idna<4,>=2.5 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers==0.35.0.dev0) (3.10)\n",
+      "Requirement already satisfied: urllib3<3,>=1.21.1 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers==0.35.0.dev0) (2.5.0)\n",
+      "Requirement already satisfied: certifi>=2017.4.17 in /home/scratch/samyak/micromamba/envs/gligen_diffusers/lib/python3.10/site-packages (from requests->diffusers==0.35.0.dev0) (2025.8.3)\n",
       "Building wheels for collected packages: diffusers\n",
       "  Building editable for diffusers (pyproject.toml) ... \u001b[?25ldone\n",
-      "\u001b[?25h  Created wheel for diffusers: filename=diffusers-0.15.0.dev0-0.editable-py3-none-any.whl size=11144 sha256=9fe81ae4227df8b6e117161b35214dcea3f0a416d7833a14dc288d82cd655e78\n",
-      "  Stored in directory: /tmp/pip-ephem-wheel-cache-_gavg55g/wheels/72/c9/f3/415f9981a289ad0e26f1f6be84a2e461090bce24395f25d065\n",
+      "\u001b[?25h  Created wheel for diffusers: filename=diffusers-0.35.0.dev0-0.editable-py3-none-any.whl size=11410 sha256=90bcdab90d81cfd1d44c2b513313bb4a4fab49eb681748211d16f06390e31fc2\n",
+      "  Stored in directory: /tmp/pip-ephem-wheel-cache-wacqqsie/wheels/8e/8b/38/d39090a53e9d81021c76a29728cab7dc486e275848bcecacb6\n",
       "Successfully built diffusers\n",
       "Installing collected packages: diffusers\n",
       "  Attempting uninstall: diffusers\n",
-      "    Found existing installation: diffusers 0.15.0.dev0\n",
-      "    Uninstalling diffusers-0.15.0.dev0:\n",
-      "      Successfully uninstalled diffusers-0.15.0.dev0\n",
-      "Successfully installed diffusers-0.15.0.dev0\n"
+      "    Found existing installation: diffusers 0.35.0.dev0\n",
+      "    Uninstalling diffusers-0.35.0.dev0:\n",
+      "      Successfully uninstalled diffusers-0.35.0.dev0\n",
+      "Successfully installed diffusers-0.35.0.dev0\n"
      ]
     }
    ],
    "source": [
     "# install gligen_diffusers\n",
     "! pwd\n",
-    "! git clone git@github.com:gligen/diffusers.git\n",
+    "! git clone https://github.com/huggingface/diffusers.git\n",
     "! python -m pip install -e diffusers"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [],
    "source": [
     "import os\n",
     "\n",
     "# setup device. If you have a GPU, you can change this to \"0\"\n",
-    "os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"5\""
+    "os.environ[\"CUDA_VISIBLE_DEVICES\"] = \"0\""
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 68,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -199,7 +230,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -220,7 +251,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 7,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -233,31 +264,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "final text_encoder_type: bert-base-uncased\n"
-     ]
-    },
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertModel: ['cls.predictions.transform.dense.weight', 'cls.seq_relationship.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.seq_relationship.bias']\n",
-      "- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n",
-      "- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n"
-     ]
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Model loaded from /home/liushilong/.cache/huggingface/hub/models--ShilongLiu--GroundingDINO/snapshots/d6b1ecf62f56b2affe410ed025352a07b57d4661/groundingdino_swint_ogc.pth \n",
-      " => _IncompatibleKeys(missing_keys=[], unexpected_keys=['label_enc.weight'])\n"
+      "final text_encoder_type: bert-base-uncased\n",
+      "Model loaded from /home/samyak/.cache/huggingface/hub/models--ShilongLiu--GroundingDINO/snapshots/a94c9b567a2a374598f05c584e96798a170c56fb/groundingdino_swint_ogc.pth \n",
+      " => _IncompatibleKeys(missing_keys=[], unexpected_keys=['label_enc.weight', 'bert.embeddings.position_ids'])\n"
      ]
     }
    ],
@@ -275,58 +291,19 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 7,
+   "execution_count": 13,
    "metadata": {},
    "outputs": [
     {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "safety_checker/model.safetensors not found\n",
-      "`text_config_dict` is provided which will be used to initialize `CLIPTextConfig`. The value `text_config[\"id2label\"]` will be overriden.\n"
+     "ename": "ImportError",
+     "evalue": "cannot import name 'StableDiffusionGLIGENPipeline' from 'diffusers' (unknown location)",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mImportError\u001b[0m                               Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[13], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21;01mdiffusers\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m StableDiffusionGLIGENPipeline\n\u001b[1;32m      4\u001b[0m pipe \u001b[38;5;241m=\u001b[39m StableDiffusionGLIGENPipeline\u001b[38;5;241m.\u001b[39mfrom_pretrained(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mgligen/diffusers-inpainting-text-box\u001b[39m\u001b[38;5;124m\"\u001b[39m, revision\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfp16\u001b[39m\u001b[38;5;124m\"\u001b[39m, torch_dtype\u001b[38;5;241m=\u001b[39mtorch\u001b[38;5;241m.\u001b[39mfloat16)\n\u001b[1;32m      5\u001b[0m pipe\u001b[38;5;241m.\u001b[39mto(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcuda\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n",
+      "\u001b[0;31mImportError\u001b[0m: cannot import name 'StableDiffusionGLIGENPipeline' from 'diffusers' (unknown location)"
      ]
-    },
-    {
-     "data": {
-      "text/plain": [
-       "StableDiffusionGLIGENPipeline {\n",
-       "  \"_class_name\": \"StableDiffusionGLIGENPipeline\",\n",
-       "  \"_diffusers_version\": \"0.15.0.dev0\",\n",
-       "  \"feature_extractor\": [\n",
-       "    \"transformers\",\n",
-       "    \"CLIPFeatureExtractor\"\n",
-       "  ],\n",
-       "  \"requires_safety_checker\": true,\n",
-       "  \"safety_checker\": [\n",
-       "    \"stable_diffusion\",\n",
-       "    \"StableDiffusionSafetyChecker\"\n",
-       "  ],\n",
-       "  \"scheduler\": [\n",
-       "    \"diffusers\",\n",
-       "    \"PNDMScheduler\"\n",
-       "  ],\n",
-       "  \"text_encoder\": [\n",
-       "    \"transformers\",\n",
-       "    \"CLIPTextModel\"\n",
-       "  ],\n",
-       "  \"tokenizer\": [\n",
-       "    \"transformers\",\n",
-       "    \"CLIPTokenizer\"\n",
-       "  ],\n",
-       "  \"unet\": [\n",
-       "    \"diffusers\",\n",
-       "    \"UNet2DConditionModel\"\n",
-       "  ],\n",
-       "  \"vae\": [\n",
-       "    \"diffusers\",\n",
-       "    \"AutoencoderKL\"\n",
-       "  ]\n",
-       "}"
-      ]
-     },
-     "execution_count": 7,
-     "metadata": {},
-     "output_type": "execute_result"
     }
    ],
    "source": [
@@ -347,7 +324,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 202,
+   "execution_count": 14,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -357,7 +334,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 203,
+   "execution_count": 15,
    "metadata": {},
    "outputs": [
     {
@@ -394,38 +371,63 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 204,
+   "execution_count": 19,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "ename": "AttributeError",
+     "evalue": "'str' object has no attribute 'shape'",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
+      "Cell \u001b[0;32mIn[19], line 10\u001b[0m\n\u001b[1;32m      7\u001b[0m TEXT_TRESHOLD \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m0.25\u001b[39m\n\u001b[1;32m      9\u001b[0m \u001b[38;5;66;03m# ✅ Keep as PIL, don't convert to np yet\u001b[39;00m\n\u001b[0;32m---> 10\u001b[0m image_source, image \u001b[38;5;241m=\u001b[39m \u001b[43mload_image\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlocal_image_path\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     12\u001b[0m \u001b[38;5;66;03m# Run prediction\u001b[39;00m\n\u001b[1;32m     13\u001b[0m boxes, logits, phrases \u001b[38;5;241m=\u001b[39m predict(\n\u001b[1;32m     14\u001b[0m     model\u001b[38;5;241m=\u001b[39mmodel,\n\u001b[1;32m     15\u001b[0m     image\u001b[38;5;241m=\u001b[39mimage,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     18\u001b[0m     text_threshold\u001b[38;5;241m=\u001b[39mTEXT_TRESHOLD\n\u001b[1;32m     19\u001b[0m )\n",
+      "File \u001b[0;32m/home/scratch/samyak/breast_cancer_detection/GroundingDINO/groundingdino/util/inference.py:49\u001b[0m, in \u001b[0;36mload_image\u001b[0;34m(image_array)\u001b[0m\n\u001b[1;32m     40\u001b[0m transform \u001b[38;5;241m=\u001b[39m T\u001b[38;5;241m.\u001b[39mCompose(\n\u001b[1;32m     41\u001b[0m     [   \n\u001b[1;32m     42\u001b[0m         T\u001b[38;5;241m.\u001b[39mRandomResize([\u001b[38;5;241m800\u001b[39m], max_size\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1333\u001b[39m),\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m     45\u001b[0m     ]\n\u001b[1;32m     46\u001b[0m )\n\u001b[1;32m     47\u001b[0m \u001b[38;5;66;03m# image_source = Image.open(image_path).convert(\"RGB\")\u001b[39;00m\n\u001b[1;32m     48\u001b[0m \u001b[38;5;66;03m# image = np.asarray(image_source)\u001b[39;00m\n\u001b[0;32m---> 49\u001b[0m image_transformed, _ \u001b[38;5;241m=\u001b[39m \u001b[43mtransform\u001b[49m\u001b[43m(\u001b[49m\u001b[43mimage_array\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m     50\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m image_array, image_transformed\n",
+      "File \u001b[0;32m/home/scratch/samyak/breast_cancer_detection/GroundingDINO/groundingdino/datasets/transforms.py:310\u001b[0m, in \u001b[0;36mCompose.__call__\u001b[0;34m(self, image, target)\u001b[0m\n\u001b[1;32m    308\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21m__call__\u001b[39m(\u001b[38;5;28mself\u001b[39m, image, target):\n\u001b[1;32m    309\u001b[0m     \u001b[38;5;28;01mfor\u001b[39;00m t \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mtransforms:\n\u001b[0;32m--> 310\u001b[0m         image, target \u001b[38;5;241m=\u001b[39m \u001b[43mt\u001b[49m\u001b[43m(\u001b[49m\u001b[43mimage\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtarget\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    311\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m image, target\n",
+      "File \u001b[0;32m/home/scratch/samyak/breast_cancer_detection/GroundingDINO/groundingdino/datasets/transforms.py:234\u001b[0m, in \u001b[0;36mRandomResize.__call__\u001b[0;34m(self, img, target)\u001b[0m\n\u001b[1;32m    232\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;21m__call__\u001b[39m(\u001b[38;5;28mself\u001b[39m, img, target\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m):\n\u001b[1;32m    233\u001b[0m     size \u001b[38;5;241m=\u001b[39m random\u001b[38;5;241m.\u001b[39mchoice(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39msizes)\n\u001b[0;32m--> 234\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mresize\u001b[49m\u001b[43m(\u001b[49m\u001b[43mimg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mtarget\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43msize\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmax_size\u001b[49m\u001b[43m)\u001b[49m\n",
+      "File \u001b[0;32m/home/scratch/samyak/breast_cancer_detection/GroundingDINO/groundingdino/datasets/transforms.py:116\u001b[0m, in \u001b[0;36mresize\u001b[0;34m(image, target, size, max_size)\u001b[0m\n\u001b[1;32m    113\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    114\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m get_size_with_aspect_ratio(image_size, size, max_size)\n\u001b[0;32m--> 116\u001b[0m size \u001b[38;5;241m=\u001b[39m get_size(\u001b[43mimage\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mshape\u001b[49m[::\u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m], size, max_size)\n\u001b[1;32m    117\u001b[0m rescaled_image \u001b[38;5;241m=\u001b[39m F\u001b[38;5;241m.\u001b[39mresize(image, size)\n\u001b[1;32m    119\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m target \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n",
+      "\u001b[0;31mAttributeError\u001b[0m: 'str' object has no attribute 'shape'"
+     ]
+    }
+   ],
    "source": [
-    "import os\n",
+    "from PIL import Image\n",
     "import supervision as sv\n",
-    "\n",
+    "import numpy as np\n",
     "\n",
     "TEXT_PROMPT = \"dog. cake.\"\n",
     "BOX_TRESHOLD = 0.35\n",
     "TEXT_TRESHOLD = 0.25\n",
     "\n",
+    "# ✅ Keep as PIL, don't convert to np yet\n",
     "image_source, image = load_image(local_image_path)\n",
     "\n",
+    "# Run prediction\n",
     "boxes, logits, phrases = predict(\n",
-    "    model=model, \n",
-    "    image=image, \n",
-    "    caption=TEXT_PROMPT, \n",
-    "    box_threshold=BOX_TRESHOLD, \n",
+    "    model=model,\n",
+    "    image=image,\n",
+    "    caption=TEXT_PROMPT,\n",
+    "    box_threshold=BOX_TRESHOLD,\n",
     "    text_threshold=TEXT_TRESHOLD\n",
     ")\n",
     "\n",
-    "annotated_frame = annotate(image_source=image_source, boxes=boxes, logits=logits, phrases=phrases)\n",
-    "annotated_frame = annotated_frame[...,::-1] # BGR to RGB\n",
+    "# For annotation, you need np.ndarray\n",
+    "image_source = np.array(image_source)  \n",
     "\n",
-    "# image_source: np.ndarray\n",
-    "# annotated_frame: np.ndarray"
+    "annotated_frame = annotate(\n",
+    "    image_source=image_source,\n",
+    "    boxes=boxes,\n",
+    "    logits=logits,\n",
+    "    phrases=phrases\n",
+    ")\n",
+    "\n",
+    "# Convert BGR->RGB if using cv2.imshow or cv2.imwrite\n",
+    "annotated_frame = annotated_frame[..., ::-1]\n"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 205,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -442,7 +444,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 206,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -451,7 +453,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 207,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
@@ -472,7 +474,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 208,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
@@ -493,7 +495,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 209,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
@@ -522,7 +524,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 210,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -533,7 +535,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 211,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -543,7 +545,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 212,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
@@ -564,7 +566,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 213,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
@@ -592,7 +594,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 214,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -602,7 +604,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 215,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
@@ -632,7 +634,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 216,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -642,7 +644,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 220,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -651,7 +653,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 223,
+   "execution_count": null,
    "metadata": {},
    "outputs": [
     {
@@ -680,7 +682,7 @@
  ],
  "metadata": {
   "kernelspec": {
-   "display_name": "Python 3",
+   "display_name": "gligen_diffusers",
    "language": "python",
    "name": "python3"
   },
@@ -694,7 +696,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.7.12"
+   "version": "3.10.18"
   },
   "orig_nbformat": 4
  },
diff --git a/groundingdino/datasets/transforms.py b/groundingdino/datasets/transforms.py
index 91cf926..4753c93 100644
--- a/groundingdino/datasets/transforms.py
+++ b/groundingdino/datasets/transforms.py
@@ -88,7 +88,7 @@ def resize(image, target, size, max_size=None):
     # size can be min_size (scalar) or (w, h) tuple
 
     def get_size_with_aspect_ratio(image_size, size, max_size=None):
-        w, h = image_size
+        w, h, _ = image_size
         if max_size is not None:
             min_original_size = float(min((w, h)))
             max_original_size = float(max((w, h)))
@@ -113,7 +113,7 @@ def resize(image, target, size, max_size=None):
         else:
             return get_size_with_aspect_ratio(image_size, size, max_size)
 
-    size = get_size(image.size, size, max_size)
+    size = get_size(image.shape[::-1], size, max_size)
     rescaled_image = F.resize(image, size)
 
     if target is None:
@@ -293,6 +293,14 @@ class Normalize(object):
         return image, target
 
 
+class Lambda(object):
+    def __init__(self, function):
+        self.function = T.Lambda(function)
+    
+    def __call__(self, image, target):
+        return self.function(image), target
+
+
 class Compose(object):
     def __init__(self, transforms):
         self.transforms = transforms
diff --git a/groundingdino/models/GroundingDINO/csrc/MsDeformAttn/ms_deform_attn_cuda.cu b/groundingdino/models/GroundingDINO/csrc/MsDeformAttn/ms_deform_attn_cuda.cu
index d04fae8..b87e076 100644
--- a/groundingdino/models/GroundingDINO/csrc/MsDeformAttn/ms_deform_attn_cuda.cu
+++ b/groundingdino/models/GroundingDINO/csrc/MsDeformAttn/ms_deform_attn_cuda.cu
@@ -32,11 +32,11 @@ at::Tensor ms_deform_attn_cuda_forward(
     AT_ASSERTM(sampling_loc.is_contiguous(), "sampling_loc tensor has to be contiguous");
     AT_ASSERTM(attn_weight.is_contiguous(), "attn_weight tensor has to be contiguous");
 
-    AT_ASSERTM(value.type().is_cuda(), "value must be a CUDA tensor");
-    AT_ASSERTM(spatial_shapes.type().is_cuda(), "spatial_shapes must be a CUDA tensor");
-    AT_ASSERTM(level_start_index.type().is_cuda(), "level_start_index must be a CUDA tensor");
-    AT_ASSERTM(sampling_loc.type().is_cuda(), "sampling_loc must be a CUDA tensor");
-    AT_ASSERTM(attn_weight.type().is_cuda(), "attn_weight must be a CUDA tensor");
+    AT_ASSERTM(value.is_cuda(), "value must be a CUDA tensor");
+    AT_ASSERTM(spatial_shapes.is_cuda(), "spatial_shapes must be a CUDA tensor");
+    AT_ASSERTM(level_start_index.is_cuda(), "level_start_index must be a CUDA tensor");
+    AT_ASSERTM(sampling_loc.is_cuda(), "sampling_loc must be a CUDA tensor");
+    AT_ASSERTM(attn_weight.is_cuda(), "attn_weight must be a CUDA tensor");
 
     const int batch = value.size(0);
     const int spatial_size = value.size(1);
@@ -62,15 +62,15 @@ at::Tensor ms_deform_attn_cuda_forward(
     for (int n = 0; n < batch/im2col_step_; ++n)
     {
         auto columns = output_n.select(0, n);
-        AT_DISPATCH_FLOATING_TYPES(value.type(), "ms_deform_attn_forward_cuda", ([&] {
+        AT_DISPATCH_FLOATING_TYPES(value.scalar_type(), "ms_deform_attn_forward_cuda", ([&] {
             ms_deformable_im2col_cuda(at::cuda::getCurrentCUDAStream(),
-                value.data<scalar_t>() + n * im2col_step_ * per_value_size,
-                spatial_shapes.data<int64_t>(),
-                level_start_index.data<int64_t>(),
-                sampling_loc.data<scalar_t>() + n * im2col_step_ * per_sample_loc_size,
-                attn_weight.data<scalar_t>() + n * im2col_step_ * per_attn_weight_size,
+                value.data_ptr<scalar_t>() + n * im2col_step_ * per_value_size,
+                spatial_shapes.data_ptr<int64_t>(),
+                level_start_index.data_ptr<int64_t>(),
+                sampling_loc.data_ptr<scalar_t>() + n * im2col_step_ * per_sample_loc_size,
+                attn_weight.data_ptr<scalar_t>() + n * im2col_step_ * per_attn_weight_size,
                 batch_n, spatial_size, num_heads, channels, num_levels, num_query, num_point,
-                columns.data<scalar_t>());
+                columns.data_ptr<scalar_t>());
 
         }));
     }
@@ -98,12 +98,12 @@ std::vector<at::Tensor> ms_deform_attn_cuda_backward(
     AT_ASSERTM(attn_weight.is_contiguous(), "attn_weight tensor has to be contiguous");
     AT_ASSERTM(grad_output.is_contiguous(), "grad_output tensor has to be contiguous");
 
-    AT_ASSERTM(value.type().is_cuda(), "value must be a CUDA tensor");
-    AT_ASSERTM(spatial_shapes.type().is_cuda(), "spatial_shapes must be a CUDA tensor");
-    AT_ASSERTM(level_start_index.type().is_cuda(), "level_start_index must be a CUDA tensor");
-    AT_ASSERTM(sampling_loc.type().is_cuda(), "sampling_loc must be a CUDA tensor");
-    AT_ASSERTM(attn_weight.type().is_cuda(), "attn_weight must be a CUDA tensor");
-    AT_ASSERTM(grad_output.type().is_cuda(), "grad_output must be a CUDA tensor");
+    AT_ASSERTM(value.is_cuda(), "value must be a CUDA tensor");
+    AT_ASSERTM(spatial_shapes.is_cuda(), "spatial_shapes must be a CUDA tensor");
+    AT_ASSERTM(level_start_index.is_cuda(), "level_start_index must be a CUDA tensor");
+    AT_ASSERTM(sampling_loc.is_cuda(), "sampling_loc must be a CUDA tensor");
+    AT_ASSERTM(attn_weight.is_cuda(), "attn_weight must be a CUDA tensor");
+    AT_ASSERTM(grad_output.is_cuda(), "grad_output must be a CUDA tensor");
 
     const int batch = value.size(0);
     const int spatial_size = value.size(1);
@@ -132,18 +132,18 @@ std::vector<at::Tensor> ms_deform_attn_cuda_backward(
     for (int n = 0; n < batch/im2col_step_; ++n)
     {
         auto grad_output_g = grad_output_n.select(0, n);
-        AT_DISPATCH_FLOATING_TYPES(value.type(), "ms_deform_attn_backward_cuda", ([&] {
+        AT_DISPATCH_FLOATING_TYPES(value.scalar_type(), "ms_deform_attn_backward_cuda", ([&] {
             ms_deformable_col2im_cuda(at::cuda::getCurrentCUDAStream(),
-                                    grad_output_g.data<scalar_t>(),
-                                    value.data<scalar_t>() + n * im2col_step_ * per_value_size,
-                                    spatial_shapes.data<int64_t>(),
-                                    level_start_index.data<int64_t>(),
-                                    sampling_loc.data<scalar_t>() + n * im2col_step_ * per_sample_loc_size,
-                                    attn_weight.data<scalar_t>() + n * im2col_step_ * per_attn_weight_size,
+                                    grad_output_g.data_ptr<scalar_t>(),
+                                    value.data_ptr<scalar_t>() + n * im2col_step_ * per_value_size,
+                                    spatial_shapes.data_ptr<int64_t>(),
+                                    level_start_index.data_ptr<int64_t>(),
+                                    sampling_loc.data_ptr<scalar_t>() + n * im2col_step_ * per_sample_loc_size,
+                                    attn_weight.data_ptr<scalar_t>() + n * im2col_step_ * per_attn_weight_size,
                                     batch_n, spatial_size, num_heads, channels, num_levels, num_query, num_point,
-                                    grad_value.data<scalar_t>() +  n * im2col_step_ * per_value_size,
-                                    grad_sampling_loc.data<scalar_t>() + n * im2col_step_ * per_sample_loc_size,
-                                    grad_attn_weight.data<scalar_t>() + n * im2col_step_ * per_attn_weight_size);
+                                    grad_value.data_ptr<scalar_t>() +  n * im2col_step_ * per_value_size,
+                                    grad_sampling_loc.data_ptr<scalar_t>() + n * im2col_step_ * per_sample_loc_size,
+                                    grad_attn_weight.data_ptr<scalar_t>() + n * im2col_step_ * per_attn_weight_size);
 
         }));
     }
diff --git a/groundingdino/util/inference.py b/groundingdino/util/inference.py
index 84a962e..ba8ef21 100644
--- a/groundingdino/util/inference.py
+++ b/groundingdino/util/inference.py
@@ -36,18 +36,18 @@ def load_model(model_config_path: str, model_checkpoint_path: str, device: str =
     return model
 
 
-def load_image(image_path: str) -> Tuple[np.array, torch.Tensor]:
+def load_image(image_array: np.ndarray) -> Tuple[np.array, torch.Tensor]:
     transform = T.Compose(
-        [
+        [   
             T.RandomResize([800], max_size=1333),
-            T.ToTensor(),
+            T.Lambda(lambda x: x.repeat(3, 1, 1)),
             T.Normalize([0.485, 0.456, 0.406], [0.229, 0.224, 0.225]),
         ]
     )
-    image_source = Image.open(image_path).convert("RGB")
-    image = np.asarray(image_source)
-    image_transformed, _ = transform(image_source, None)
-    return image, image_transformed
+    # image_source = Image.open(image_path).convert("RGB")
+    # image = np.asarray(image_source)
+    image_transformed, _ = transform(image_array, None)
+    return image_array, image_transformed
 
 
 def predict(
diff --git a/requirements.txt b/requirements.txt
index 24aa11d..a4b0f51 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,10 +1,7 @@
-torch
-torchvision
 transformers
 addict
 yapf
 timm
-numpy
 opencv-python
 supervision>=0.22.0
 pycocotools
